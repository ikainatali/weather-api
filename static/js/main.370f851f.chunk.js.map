{"version":3,"sources":["components/Data.js","App.js","index.js"],"names":["Data","params","param","today","Date","useEffect","map","ct","document","querySelector","innerHTML","length","classList","remove","add","addClass","className","ctName","country","toLocaleDateString","weekday","year","month","day","src","icon","temperature","weather","App","useState","city","setCity","cityName","setCityName","setParams","getCityName","a","axios","get","response","resData","data","id","Math","floor","random","location","name","current","temp_c","condition","text","console","error","message","Container","Row","Col","lg","span","offset","md","sm","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPA6CeA,EA1CF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAQhBC,EAAQ,IAAIC,KAoBlB,OARAC,qBAAU,WACJJ,GACFA,EAAOK,KAAI,SAACJ,IAXC,WACf,IAAMK,EAAKC,SAASC,cAAc,SACnBF,EAAGG,UACPC,OAAS,KAClBJ,EAAGK,UAAUC,OAAO,aACpBN,EAAGK,UAAUE,IAAI,cAOfC,QAGH,CAACd,IAGF,gCACE,oBAAIe,UAAU,sBAAd,SAAqCd,EAAMe,SAC3C,mBAAGD,UAAU,UAAb,SAAwBd,EAAMgB,UAC9B,oBAAIF,UAAU,OAAd,SAAsBb,EAAMgB,mBAAmB,QA/BnC,CACdC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,cA4BH,sBAAKP,UAAU,gDAAf,UACE,qBAAKA,UAAU,YAAYQ,IAAKtB,EAAMuB,OACtC,qBAAIT,UAAU,sBAAd,UAAqCd,EAAMwB,YAA3C,aAEF,oBAAIV,UAAU,eAAd,SAA8Bd,EAAMyB,c,sCC4D3BC,EAzFH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAO5B,EAAP,KAAeiC,EAAf,KAWMC,EAAW,uCAAG,WAAO5B,GAAP,iBAAA6B,EAAA,+EAEOC,IAAMC,IAAN,2FAC+D/B,EAD/D,YAFP,OAEVgC,EAFU,OAKVC,EAAUD,EAASE,KAEzBP,EAAU,CACR,CACEQ,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB5B,OAAQuB,EAAQM,SAASC,KACzB7B,QAASsB,EAAQM,SAAS5B,QAC1BQ,YAAac,EAAQQ,QAAQC,OAC7BxB,KAAMe,EAAQQ,QAAQE,UAAUzB,KAChCE,QAASa,EAAQQ,QAAQE,UAAUC,QAdvB,gDAkBhBC,QAAQC,MAAM,KAAIC,SAClB,MACEpB,EAAU,IApBI,yDAAH,sDA+BjB,OANA7B,qBAAU,WACJ2B,GACFG,EAAYH,KAEb,CAACA,IAGF,mCACE,kCACE,cAACuB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GACvBC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GACvBE,GAAI,CAAEH,KAAM,EAAGC,OAAQ,GAHzB,SAKE,sBAAK5C,UAAU,qCAAf,UACE,oBAAIA,UAAU,UAAd,0BACA,sBAAMA,UAAU,OAAO+C,SAnDhB,SAACC,GACpBA,EAAEC,iBAEFhC,EAAYH,GACZC,EAAQ,KA+CI,SACE,uBACEmC,KAAK,OACLlD,UAAU,eACVmD,YAAY,kBACZC,MAAOtC,EACPuC,SAAU,SAACL,GACTjC,EAAQiC,EAAEM,OAAOF,YAKX,KAAXnE,EACCA,EAAOK,KAAI,SAACJ,GACV,OACE,cAAC,EAAD,CAAqBD,OAAQA,EAAQC,MAAOA,GAAjCA,EAAMwC,OAIrB,mBAAG1B,UAAU,OAAb,+EClFlBuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASkE,eAAe,W","file":"static/js/main.370f851f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Data = ({ params, param }) => {\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  // add remove class to style city name\r\n  const addClass = () => {\r\n    const ct = document.querySelector(\".city\");\r\n    const ctText = ct.innerHTML;\r\n    if (ctText.length > 15) {\r\n      ct.classList.remove(\"display-4\");\r\n      ct.classList.add(\"display-5\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (params) {\r\n      params.map((param) => {\r\n        addClass();\r\n      });\r\n    }\r\n  }, [params]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='city mt-3 display-4'>{param.ctName}</h1>\r\n      <p className='country'>{param.country}</p>\r\n      <h5 className='date'>{today.toLocaleDateString(\"en-US\", options)}</h5>\r\n      <div className='d-flex align-items-end justify-content-center'>\r\n        <img className='img-fluid' src={param.icon} />\r\n        <h1 className='temp display-4 mt-2'>{param.temperature}&ordm;</h1>\r\n      </div>\r\n      <h4 className='weather mt-2'>{param.weather}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//compnents\nimport Data from \"./components/Data\";\n\n//bootstrap\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst App = () => {\n  const [city, setCity] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  const [params, setParams] = useState([]);\n\n  let text;\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n\n    setCityName(city);\n    setCity(\"\");\n  };\n\n  //get weather data\n  const getCityName = async (ct) => {\n    try {\n      const response = await axios.get(\n        `https://api.weatherapi.com/v1/current.json?key=775e854869ce46fe85d180626210708&q=${ct}&aqi=no`\n      );\n      const resData = response.data;\n\n      setParams([\n        {\n          id: Math.floor(Math.random() * 100),\n          ctName: resData.location.name,\n          country: resData.location.country,\n          temperature: resData.current.temp_c,\n          icon: resData.current.condition.icon,\n          weather: resData.current.condition.text,\n        },\n      ]);\n    } catch (err) {\n      console.error(err.message);\n      if (err) {\n        setParams(\"\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (cityName) {\n      getCityName(cityName);\n    }\n  }, [cityName]);\n\n  return (\n    <>\n      <section>\n        <Container>\n          <Row>\n            <Col\n              lg={{ span: 6, offset: 3 }}\n              md={{ span: 6, offset: 3 }}\n              sm={{ span: 8, offset: 2 }}\n            >\n              <div className='box shadow-lg mt-5 p-4 text-center'>\n                <h1 className='heading'>Find Weather</h1>\n                <form className='mt-4' onSubmit={onSubmitForm}>\n                  <input\n                    type='text'\n                    className='form-control'\n                    placeholder='Enter city name'\n                    value={city}\n                    onChange={(e) => {\n                      setCity(e.target.value);\n                    }}\n                  />\n                </form>\n\n                {params !== \"\" ? (\n                  params.map((param) => {\n                    return (\n                      <Data key={param.id} params={params} param={param} />\n                    );\n                  })\n                ) : (\n                  <p className='mt-3'>\n                    Sorry the city name is incorrect or does not exits.\n                  </p>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}