{"version":3,"sources":["App.js","index.js"],"names":["App","useState","city","setCity","cityName","setCityName","params","setParams","getCityName","ct","a","axios","get","response","resData","data","id","Math","floor","random","ctName","location","name","country","temperature","current","temp_c","icon","condition","weather","text","console","error","message","useEffect","map","param","document","querySelector","innerHTML","length","classList","remove","add","addClass","options","weekday","year","month","day","today","Date","Container","Row","Col","lg","span","offset","md","sm","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","toLocaleDateString","src","ReactDOM","render","StrictMode","getElementById"],"mappings":"wRAwIeA,EAhIH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KASMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEOC,IAAMC,IAAN,2FAC+DH,EAD/D,YAFP,OAEVI,EAFU,OAKVC,EAAUD,EAASE,KAEzBR,EAAU,CACR,CACES,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,OAAQN,EAAQO,SAASC,KACzBC,QAAST,EAAQO,SAASE,QAC1BC,YAAaV,EAAQW,QAAQC,OAG7BC,KAAMb,EAAQW,QAAQG,UAAUD,KAChCE,QAASf,EAAQW,QAAQG,UAAUE,QAhBvB,gDAoBhBC,QAAQC,MAAM,KAAIC,SAClB,MACE1B,EAAU,IAtBI,yDAAH,sDAqCjB2B,qBAAU,WACJ9B,GACFI,EAAYJ,KAEb,CAACA,IAEJ8B,qBAAU,WACJ5B,GACFA,EAAO6B,KAAI,SAACC,IAjBC,WACf,IAAM3B,EAAK4B,SAASC,cAAc,SACnB7B,EAAG8B,UACPC,OAAS,KAClB/B,EAAGgC,UAAUC,OAAO,aACpBjC,EAAGgC,UAAUE,IAAI,cAafC,QAGH,CAACtC,IAEJ,IAAMuC,EAAU,CACdC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,WAGDC,EAAQ,IAAIC,KAElB,OACE,mCACE,kCACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GACvBC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GACvBE,GAAI,CAAEH,KAAM,EAAGC,OAAQ,GAHzB,SAKE,sBAAKG,UAAU,qCAAf,UACE,oBAAIA,UAAU,eAAd,0BACA,sBAAMA,UAAU,OAAOC,SA/EhB,SAACC,GACpBA,EAAEC,iBACF1D,EAAYH,GACZC,EAAQ,KA4EI,SACE,uBACE6D,KAAK,OACLJ,UAAU,eACVK,YAAY,kBACZC,MAAOhE,EACPiE,SAAU,SAACL,GACT3D,EAAQ2D,EAAEM,OAAOF,YAIX,KAAX5D,EACCA,EAAO6B,KAAI,SAACC,GACV,OACE,gCACE,qBAAIwB,UAAU,YAAd,UACE,uBAAMA,UAAU,iBAAhB,UACGxB,EAAMhB,OADT,OAGCgB,EAAMb,WAET,oBAAIqC,UAAU,YAAd,SACGV,EAAMmB,mBAAmB,QAASxB,KAErC,qBAAIe,UAAU,YAAd,UACE,qBAAKU,IAAKlC,EAAMT,OACfS,EAAMZ,YAFT,UAIA,oBAAIoC,UAAU,eAAd,SAA8BxB,EAAMP,YAd5BO,EAAMpB,OAmBpB,mBAAG4C,UAAU,OAAb,+DCxHlBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,W","file":"static/js/main.262409f5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//bootstrap\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst App = () => {\n  const [city, setCity] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  const [params, setParams] = useState([]);\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    setCityName(city);\n    setCity(\"\");\n  };\n\n  //get weather data\n  const getCityName = async (ct) => {\n    try {\n      const response = await axios.get(\n        `https://api.weatherapi.com/v1/current.json?key=775e854869ce46fe85d180626210708&q=${ct}&aqi=no`\n      );\n      const resData = response.data;\n\n      setParams([\n        {\n          id: Math.floor(Math.random() * 100),\n          ctName: resData.location.name,\n          country: resData.location.country,\n          temperature: resData.current.temp_c,\n          //  minTemperature: resData.main.temp_min,\n          //  maxTemperature: resData.main.temp_max,\n          icon: resData.current.condition.icon,\n          weather: resData.current.condition.text,\n        },\n      ]);\n    } catch (err) {\n      console.error(err.message);\n      if (err) {\n        setParams(\"\");\n      }\n    }\n  };\n\n  // add remove class to style city name\n  const addClass = () => {\n    const ct = document.querySelector(\".name\");\n    const ctText = ct.innerHTML;\n    if (ctText.length > 15) {\n      ct.classList.remove(\"display-4\");\n      ct.classList.add(\"display-5\");\n    }\n  };\n\n  useEffect(() => {\n    if (cityName) {\n      getCityName(cityName);\n    }\n  }, [cityName]);\n\n  useEffect(() => {\n    if (params) {\n      params.map((param) => {\n        addClass();\n      });\n    }\n  }, [params]);\n\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n\n  const today = new Date();\n\n  return (\n    <>\n      <section>\n        <Container>\n          <Row>\n            <Col\n              lg={{ span: 6, offset: 3 }}\n              md={{ span: 6, offset: 3 }}\n              sm={{ span: 8, offset: 2 }}\n            >\n              <div className='box shadow-lg mt-5 p-4 text-center'>\n                <h1 className='heading mt-2'>Find Weather</h1>\n                <form className='mt-4' onSubmit={onSubmitForm}>\n                  <input\n                    type='text'\n                    className='form-control'\n                    placeholder='Enter city name'\n                    value={city}\n                    onChange={(e) => {\n                      setCity(e.target.value);\n                    }}\n                  />\n                </form>\n                {params !== \"\" ? (\n                  params.map((param) => {\n                    return (\n                      <div key={param.id}>\n                        <h6 className='city mt-3'>\n                          <span className='name display-4'>\n                            {param.ctName},\n                          </span>\n                          {param.country}\n                        </h6>\n                        <h5 className='date mt-2'>\n                          {today.toLocaleDateString(\"en-US\", options)}\n                        </h5>\n                        <h1 className='temp mt-4'>\n                          <img src={param.icon} />\n                          {param.temperature}&ordm;\n                        </h1>\n                        <h2 className='weather mt-2'>{param.weather}</h2>\n                      </div>\n                    );\n                  })\n                ) : (\n                  <p className='mt-3'>Sorry the city name does not exits.</p>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}